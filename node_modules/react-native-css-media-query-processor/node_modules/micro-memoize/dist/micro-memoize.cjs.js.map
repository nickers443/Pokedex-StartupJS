{"version":3,"file":"micro-memoize.cjs.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["import {\n  AsyncCacheUpdater,\n  Cache,\n  Dictionary,\n  Key,\n  KeyIndexGetter,\n  Keys,\n  Memoized,\n  StandardOptions,\n  Options,\n} from './types';\n\nconst DEFAULT_OPTIONS_KEYS: { [key: string]: boolean } = {\n  isEqual: true,\n  isMatchingKey: true,\n  isPromise: true,\n  maxSize: true,\n  onCacheAdd: true,\n  onCacheChange: true,\n  onCacheHit: true,\n  transformKey: true,\n};\n\n/**\n * @function createGetKeyIndex\n *\n * @description\n * create a method that will get the matching key index if found\n *\n * @param options the memoization options passed\n * @returns the method to get the key index\n */\nexport function createGetKeyIndex({\n  isEqual,\n  isMatchingKey,\n  maxSize,\n}: StandardOptions) {\n  if (typeof isMatchingKey === 'function') {\n    return function getKeyIndex(allKeys: Keys, keyToMatch: Key) {\n      if (isMatchingKey(allKeys[0], keyToMatch)) {\n        return 0;\n      }\n\n      if (maxSize > 1) {\n        const keysLength = allKeys.length;\n\n        for (let index = 1; index < keysLength; index++) {\n          if (isMatchingKey(allKeys[index], keyToMatch)) {\n            return index;\n          }\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  if (maxSize > 1) {\n    return function getKeyIndex(allKeys: Keys, keyToMatch: Key) {\n      const keysLength = allKeys.length;\n      const keyLength = keyToMatch.length;\n\n      let existingKey;\n\n      for (let index = 0; index < keysLength; index++) {\n        existingKey = allKeys[index];\n\n        if (existingKey.length === keyLength) {\n          let argIndex = 0;\n\n          for (; argIndex < keyLength; argIndex++) {\n            if (!isEqual(existingKey[argIndex], keyToMatch[argIndex])) {\n              break;\n            }\n          }\n\n          if (argIndex === keyLength) {\n            return index;\n          }\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  return function getKeyIndex(allKeys: Keys, keyToMatch: Key) {\n    const existingKey = allKeys[0];\n    const keyLength = existingKey.length;\n\n    if (keyToMatch.length !== keyLength) {\n      return -1;\n    }\n\n    for (let index = 0; index < keyLength; index++) {\n      if (!isEqual(existingKey[index], keyToMatch[index])) {\n        return -1;\n      }\n    }\n\n    return 0;\n  };\n}\n\n/**\n * @function getCustomOptions\n *\n * @description\n * get the custom options on the object passed\n *\n * @param options the memoization options passed\n * @returns the custom options passed\n */\nexport function getCustomOptions(options: Options) {\n  const customOptions: { [key: string]: any } = {};\n\n  for (const key in options) {\n    if (!DEFAULT_OPTIONS_KEYS[key]) {\n      customOptions[key] = options[key];\n    }\n  }\n\n  return customOptions;\n}\n\nexport function isFunction(fn: any): fn is Function {\n  return typeof fn === 'function';\n}\n\n/**\n * @function isMemoized\n *\n * @description\n * is the function passed already memoized\n *\n * @param fn the function to test\n * @returns is the function already memoized\n */\nexport function isMemoized(fn: any): fn is Memoized<Function> {\n  return isFunction(fn) && (fn as Memoized<Function>).isMemoized;\n}\n\n/**\n * @function isSameValueZero\n *\n * @description\n * are the objects equal based on SameValueZero equality\n *\n * @param object1 the first object to compare\n * @param object2 the second object to compare\n * @returns are the two objects equal\n */\nexport function isSameValueZero(object1: any, object2: any) {\n  return object1 === object2 || (object1 !== object1 && object2 !== object2);\n}\n\n/**\n * @function mergeOptions\n *\n * @description\n * merge the options into the target\n *\n * @param extraOptions the extra options passed\n * @param providedOptions the defaulted options provided\n * @returns the merged options\n */\nexport function mergeOptions(\n  extraOptions: Dictionary<any>,\n  providedOptions: StandardOptions,\n) {\n  const target: Options = {};\n\n  for (const key in extraOptions) {\n    target[key] = extraOptions[key];\n  }\n\n  for (const key in providedOptions) {\n    target[key] = providedOptions[key as keyof StandardOptions];\n  }\n\n  return target;\n}\n\n/**\n * @function orderByLru\n *\n * @description\n * order the array based on a Least-Recently-Used basis\n *\n * @param keys the keys to order\n * @param newKey the new key to move to the front\n * @param values the values to order\n * @param newValue the new value to move to the front\n * @param startingIndex the index of the item to move to the front\n */\nexport function orderByLru(\n  cache: Cache,\n  newKey: Key,\n  newValue: any,\n  startingIndex: number,\n  maxSize: number,\n) {\n  let index = startingIndex;\n\n  while (index--) {\n    cache.keys[index + 1] = cache.keys[index];\n    cache.values[index + 1] = cache.values[index];\n  }\n\n  cache.keys[0] = newKey;\n  cache.values[0] = newValue;\n\n  if (startingIndex >= maxSize) {\n    cache.keys.length = maxSize;\n    cache.values.length = maxSize;\n  }\n}\n\nexport function createUpdateAsyncCache(\n  options: StandardOptions,\n): AsyncCacheUpdater {\n  const getKeyIndex: KeyIndexGetter = createGetKeyIndex(options);\n\n  const { onCacheChange, onCacheHit } = options;\n\n  const shouldUpdateOnChange = typeof onCacheChange === 'function';\n  const shouldUpdateOnHit = typeof onCacheHit === 'function';\n\n  /**\n   * @function updateAsyncCache\n   *\n   * @description\n   * update the promise method to auto-remove from cache if rejected, and\n   * if resolved then fire cache hit / changed\n   *\n   * @param cache the memoized function's cache\n   * @param memoized the memoized function\n   */\n  return (cache: Cache, memoized: Memoized<Function>): void => {\n    const key: any = cache.keys[0];\n\n    cache.values[0] = cache.values[0]\n      .then((value: any) => {\n        shouldUpdateOnHit && onCacheHit(cache, options, memoized);\n        shouldUpdateOnChange && onCacheChange(cache, options, memoized);\n\n        return value;\n      })\n      .catch((error: Error) => {\n        const keyIndex = getKeyIndex(cache.keys, key);\n\n        if (keyIndex !== -1) {\n          cache.keys.splice(keyIndex, 1);\n          cache.values.splice(keyIndex, 1);\n        }\n\n        throw error;\n      });\n  };\n}\n","// types\nimport { Cache, Memoized, Keys, StandardOptions, Values } from './types';\n\n// utils\nimport {\n  createGetKeyIndex,\n  createUpdateAsyncCache,\n  getCustomOptions,\n  isFunction,\n  isMemoized,\n  isSameValueZero,\n  mergeOptions,\n  orderByLru,\n} from './utils';\n\nconst slice = Function.prototype.bind.call(\n  Function.prototype.call,\n  Array.prototype.slice,\n);\n\nfunction createMemoizedFunction<Fn extends Function>(\n  fn: Fn,\n  options: StandardOptions = {},\n): Memoized<Fn> {\n  if (isMemoized(fn)) {\n    return fn;\n  }\n\n  if (!isFunction(fn)) {\n    throw new TypeError('You must pass a function to `memoize`.');\n  }\n\n  const {\n    isEqual = isSameValueZero,\n    isMatchingKey,\n    isPromise = false,\n    maxSize = 1,\n    onCacheAdd,\n    onCacheChange,\n    onCacheHit,\n    transformKey,\n  }: StandardOptions = options;\n\n  const normalizedOptions = mergeOptions(getCustomOptions(options), {\n    isEqual,\n    isMatchingKey,\n    isPromise,\n    maxSize,\n    onCacheAdd,\n    onCacheChange,\n    onCacheHit,\n    transformKey,\n  });\n\n  const getKeyIndex = createGetKeyIndex(normalizedOptions);\n  const updateAsyncCache = createUpdateAsyncCache(normalizedOptions);\n\n  const keys: Keys = [];\n  const values: Values = [];\n\n  const cache: Cache = {\n    keys,\n    get size() {\n      return cache.keys.length;\n    },\n    values,\n  };\n\n  const canTransformKey = typeof transformKey === 'function';\n\n  const shouldCloneArguments = !!(transformKey || isMatchingKey);\n\n  const shouldUpdateOnAdd = typeof onCacheAdd === 'function';\n  const shouldUpdateOnChange = typeof onCacheChange === 'function';\n  const shouldUpdateOnHit = typeof onCacheHit === 'function';\n\n  // @ts-ignore\n  const memoized: Memoized<Fn> = function memoized() {\n    const normalizedArgs = shouldCloneArguments\n      ? slice(arguments, 0)\n      : arguments;\n    const key = canTransformKey ? transformKey(normalizedArgs) : normalizedArgs;\n    const keyIndex = keys.length ? getKeyIndex(keys, key) : -1;\n\n    if (keyIndex !== -1) {\n      shouldUpdateOnHit && onCacheHit(cache, normalizedOptions, memoized);\n\n      if (keyIndex) {\n        orderByLru(cache, keys[keyIndex], values[keyIndex], keyIndex, maxSize);\n\n        shouldUpdateOnChange &&\n          onCacheChange(cache, normalizedOptions, memoized);\n      }\n    } else {\n      const newValue = fn.apply(this, arguments);\n      const newKey = shouldCloneArguments ? key : slice(arguments, 0);\n\n      orderByLru(cache, newKey, newValue, keys.length, maxSize);\n\n      isPromise && updateAsyncCache(cache, memoized);\n\n      shouldUpdateOnAdd && onCacheAdd(cache, normalizedOptions, memoized);\n      shouldUpdateOnChange && onCacheChange(cache, normalizedOptions, memoized);\n    }\n\n    return values[0];\n  };\n\n  Object.defineProperties(memoized, {\n    cache: {\n      configurable: true,\n      value: cache,\n    },\n    cacheSnapshot: {\n      configurable: true,\n      get() {\n        return {\n          keys: slice(cache.keys, 0),\n          size: cache.size,\n          values: slice(cache.values, 0),\n        };\n      },\n    },\n    isMemoized: {\n      configurable: true,\n      value: true,\n    },\n    options: {\n      configurable: true,\n      value: normalizedOptions,\n    },\n  });\n\n  return memoized;\n}\n\nexport default createMemoizedFunction;\n"],"names":[],"mappings":"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"}